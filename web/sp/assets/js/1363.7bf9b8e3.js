(window.webpackJsonp=window.webpackJsonp||[]).push([[1363],{3663:function(t,e,v){"use strict";v.r(e);var _=v(18),s=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"概念和原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念和原理"}},[t._v("#")]),t._v(" 概念和原理")]),t._v(" "),v("p",[t._v("在使用 echarts 生成图表时，经常需要做繁琐的数据类型转化、修改复杂的配置项。\n"),v("code",[t._v("$ui/charts")]),t._v(" 的出现正是为了解决这个痛点。\n基于 "),v("code",[t._v("ECharts 4")]),t._v(" 封装的 "),v("code",[t._v("$ui/charts")]),t._v(" 图表组件，只需要统一提供一种对前后端都友好的数据格式设置简单的配置项，便可轻松生成常见的图表。")]),t._v(" "),v("p",[t._v("图表的制作步骤：")]),t._v(" "),v("ol",[v("li",[t._v("确定选用哪个图表组件")]),t._v(" "),v("li",[t._v("组织描述图表的数据格式，定好维度和指标。即组件的 "),v("code",[t._v("data")]),t._v(" 参数")]),t._v(" "),v("li",[t._v("设置组件的私有参数，开启需要的功能，即组件的 "),v("code",[t._v("settings")]),t._v(" 参数")]),t._v(" "),v("li",[t._v("设置组件的个性样式，即组件的 "),v("code",[t._v("extend")]),t._v(" 参数")])])])}),[],!1,null,null,null);e.default=s.exports}}]);